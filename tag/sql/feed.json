{
    "version": "https://jsonfeed.org/version/1",
    "title": "严于律己 宽以待人 • All posts by \"sql\" tag",
    "description": "",
    "home_page_url": "https://wmingchong.github.io",
    "items": [
        {
            "id": "https://wmingchong.github.io/2023/02/12/qita/SQL%E5%85%B3%E9%94%AE%E5%AD%97%E5%92%8C%E5%87%BD%E6%95%B0/",
            "url": "https://wmingchong.github.io/2023/02/12/qita/SQL%E5%85%B3%E9%94%AE%E5%AD%97%E5%92%8C%E5%87%BD%E6%95%B0/",
            "title": "SQL关键字和函数",
            "date_published": "2023-02-12T01:08:12.000Z",
            "content_html": "<h3 id=\"sql关键字以及函数\"><a class=\"markdownIt-Anchor\" href=\"#sql关键字以及函数\">#</a> SQL 关键字以及函数</h3>\n<h4 id=\"sql中的开窗口函数over\"><a class=\"markdownIt-Anchor\" href=\"#sql中的开窗口函数over\">#</a> SQL 中的开窗口函数 OVER ()</h4>\n<p><strong>定义</strong>：OVER 用于为行定义一个窗口，它对一组值进行操作，不需要使用 GROUP BY 子句对数据进行分组，能够在同一行中同时返回基础行的列和聚合列。</p>\n<blockquote>\n<p><strong>语法</strong>：OVER ([ PARTITION BY column] [ ORDER BY culumn ] )</p>\n</blockquote>\n<p><strong>用法</strong>：OVER 开窗函数必须与聚合函数或排序函数一起使用，聚合函数一般指 SUM (),MAX (),MIN,COUNT (),AVG () 等常见函数。排序函数一般指 RANK (),ROW_NUMBER (),DENSE_RANK (),NTILE () 等。</p>\n<blockquote>\n<p><strong>拓展</strong>：PARTITION BY 子句进行分组；ORDER BY 子句进行排序。</p>\n</blockquote>\n<h4 id=\"sql中的窗口函数\"><a class=\"markdownIt-Anchor\" href=\"#sql中的窗口函数\">#</a> SQL 中的窗口函数</h4>\n<blockquote>\n<p>first_value： 用来返回一个分组窗口里的第一行记录，也即排名第一的那行记录。</p>\n</blockquote>\n<blockquote>\n<p>last_value： 和 first_value 相反，用来返回分组窗口里的最后一行记录，也即倒数第一的那行记录。</p>\n</blockquote>\n<blockquote>\n<p>nth_value： 用来返回分组内指定行的记录。</p>\n</blockquote>\n<blockquote>\n<p>ntile： 用来在分组内继续二次分组。</p>\n</blockquote>\n<blockquote>\n<p>ROW_NUMBER ()：当前行在其分组内的序号。不管其排序结果中是否出现重复值。其排序结果都为：1,2.3.4.5.。顺序排序 ——1、2、3</p>\n</blockquote>\n<blockquote>\n<p>DENSE_RANK ()：不间断的组内排序。使用这个函数时，可以出现 1.1.2.2 这种形式的分组。并列排序，不跳过重复序号 ——1、1、2</p>\n</blockquote>\n<blockquote>\n<p>RANK ()：间断的组内排序。其排序结果可能出现如下结果：1.1.3.4.4.6。并列排序，跳过重复序号 ——1、1、3</p>\n</blockquote>\n<h4 id=\"sql中的日期函数date_add\"><a class=\"markdownIt-Anchor\" href=\"#sql中的日期函数date_add\">#</a> SQL 中的日期函数 DATE_ADD ()</h4>\n<p>date_add ()：常常用户在 mysql 的 sql 中实现对日期类型的操作，比如增加或者减少，但是不改变原来的数据，只是对查询的数据做处理</p>\n<blockquote>\n<p>语法：DATE_ADD (date,INTERVAL expr unit)</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 得到当前时间增加1天的结果</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> date_add(now(),<span class=\"type\">interval</span> <span class=\"number\">1</span> <span class=\"keyword\">day</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 得到当前时间减少72个小时的结果</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> date_add(now(),<span class=\"type\">interval</span> <span class=\"number\">-72</span> <span class=\"keyword\">hour</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"sql中的union\"><a class=\"markdownIt-Anchor\" href=\"#sql中的union\">#</a> SQL 中的 union</h4>\n<p>作用：将两张毫不相干的表的查询结果拼接在一起输出，前提是两个查询的列数要相同。</p>\n<h4 id=\"sql中的round\"><a class=\"markdownIt-Anchor\" href=\"#sql中的round\">#</a> SQL 中的 ROUND ()</h4>\n<p>round () 函数用于把<strong>数值字段</strong>舍入为指定的小数位数</p>\n<blockquote>\n<p>语法：SELECT ROUND (column_name,decimals) FROM [表名]</p>\n<p>column_name: 要舍入的字段，必需</p>\n<p>decimals: 规定要返回的小数位数，可选</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- ROUND(X)函数将值X四舍五入之后保留整数部分</span></span><br><span class=\"line\"><span class=\"comment\">-- -7</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ROUND(<span class=\"number\">-6.6</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 1100</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ROUND(<span class=\"number\">1123.26723</span>,<span class=\"number\">-2</span>);</span><br><span class=\"line\"><span class=\"comment\">-- 1000</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ROUND(<span class=\"number\">1123.26723</span>,<span class=\"number\">-3</span>);</span><br><span class=\"line\"><span class=\"comment\">-- 根据参数D值，将参数X四舍五入后得到保留小数点后D位的值，X值的小数位不够D位的补零</span></span><br><span class=\"line\"><span class=\"comment\">-- 如果D为负值，则保留小数点左边D位，先进行四舍五入操作，再将相应的位数值取零</span></span><br><span class=\"line\"><span class=\"comment\">-- -6.7</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ROUND(<span class=\"number\">-6.66</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"sql中的日期格式化函数date_format\"><a class=\"markdownIt-Anchor\" href=\"#sql中的日期格式化函数date_format\">#</a> SQL 中的日期格式化函数 date_format ()</h4>\n<p>date_format 函数用于格式化日期字段。</p>\n<blockquote>\n<p>语法：DATE_FORMAT (date, format)</p>\n<p>date 为日期字段，format 为格式化字符串。常用的格式化字符有 % Y、% m、% d 等</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 这将返回日期字段按照“年-月-日”格式格式化后的结果。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> DATE_FORMAT(date_field, <span class=\"string\">&#x27;%Y-%m-%d&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 需要注意的是，在使用 date_format 函数时，date 字段需要是日期类型的，如果是字符串类型的日期需要使用str_to_date函数转换成日期类型。</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> DATE_FORMAT(str_to_date(<span class=\"string\">&#x27;2022-10-01&#x27;</span>,<span class=\"string\">&#x27;%Y-%m-%d&#x27;</span>),<span class=\"string\">&#x27;%Y-%m-%d %T&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">-- 这将返回字符串类型 &#x27;2022-10-01&#x27; 转换成日期类型后的结果，并按照 &#x27;%Y-%m-%d %T&#x27;格式输出。</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "SQL"
            ]
        }
    ]
}